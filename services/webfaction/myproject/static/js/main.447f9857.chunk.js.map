{"version":3,"sources":["images/stocks.jpg","components/ui/Strategies.tsx","components/sidebar/Sidebar.tsx","components/main/MainContainer.tsx","components/error/Page404.tsx","components/home/Home.tsx","components/utils/FormatDate.ts","components/utils/ChartUtils.ts","components/d3/ScatterChart.tsx","components/d3/DoubleHorizontalBarChart.tsx","components/ui/SliderCard.tsx","components/ui/Indicators.tsx","components/ui/InidicatorPage.tsx","components/d3/LineChart.tsx","components/ui/StrategiesPage.tsx","Routes.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","CurrentPosition","LastPositionChange","Sidebar","Drawer","open","variant","anchor","className","List","map","text","to","toLowerCase","ListItem","button","key","ListItemText","primary","withMainContainer","Comp","props","src","Stocks","style","height","width","FormatDate","date","d","Date","month","getMonth","toString","day","getDate","year","getFullYear","length","join","ChartUtils","svg","title","xlabel","ylabel","xScale","yScale","axis_width","axis_height","margin_top","margin_left","append","attr","call","d3","ticks","valToCheck","errVal","legendData","yOffset","forEach","line2","x","y","curve","dataset","datum","color","name","ScatterChart","data","label","canvas","useRef","margin","maxX","minX","maxY","minY","i","range","domain","drawScatterChart","g","current","selectAll","remove","possibleY","undefinedHandler","yAxisShift","initChart","radius","enter","addXYScatter","useEffect","ref","transform","DoubleHorizontalBarChart","labels","titles","xScaleRight","xScaleLeft","bandwidth","drawChart","SliderCard","onChange","description","minVal","maxVal","defaultValue","marks","push","value","String","Grid","item","lg","Card","CardContent","Typography","id","gutterBottom","Slider","step","min","max","valueLabelDisplay","IndicatorTextMap","acc_dist_index","more","chaikin_money_flow","ease_of_move","williams_r","rel_strength","IndicatorsLayout","final","doubleData","labelStrings","indicator_list","Object","entries","indicators","useState","predictionTerm","updateTerm","state","setState","handleCheckBoxChange","event","target","checked","f_regression","predict","val","textAlign","checkboxes","FormControlLabel","control","Checkbox","FormControl","component","FormLabel","FormGroup","dates","scatterData","cum_return","href","rel","container","spacing","loading","setLoading","ticker","setTicker","endDate","setEndDate","tempDate","setMonth","startDate","setStartDate","setData","httpClient","axios","create","getData","a","get","params","symbol","start_date","end_date","response","status","statusText","console","log","Error","utils","DateFnsUtils","justify","Input","placeholder","inputProps","format","KeyboardButtonProps","Button","onClick","disabled","CircularProgress","alignContent","colors","LineChart","trades","tempValue","addChartLine","addChartSymbol","symbolClass","hasNoFill","j","enterLong","exitLong","enterShort","exitShort","isLine","hollow","createLegend","drawLineChart","StrategiesLayout","returnData","strategyLabels","legendLabels","k","term","longEnter","setLongEnter","longExit","setLongExit","shortEnter","setShortEnter","shortExit","setShortExit","rsiFlip","setrsiFlip","strategyLabelsMap","vals","getType","currentTrade","Neutral","changedPostion","NoChange","currentPortfolioValue","tempChanges","predict_move_rsi","Short","EnterLong","Long","EnterShort","priceExit","predictedMove","ExitLong","ExitShort","daily_ret","marksLong","move","marksTerms","justifySelf","Strategies","Routes","exact","path","Home","InidicatorPage","StrategiesPage","Page404","history","createBrowserHistory","App","Helmet","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.447f9857.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/stocks.456ede4e.jpg\";","import React, { useState } from \"react\";\r\nimport { StockAnalysis } from \"../../types\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport LineChart from \"../d3/LineChart\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport SliderCard from \"../ui/SliderCard\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\n\r\nexport enum CurrentPosition {\r\n  Short = 1,\r\n  Neutral = 2,\r\n  Long = 3,\r\n}\r\n\r\nexport enum LastPositionChange {\r\n  NoChange = -1,\r\n  ExitLong = 0,\r\n  EnterLong = 1,\r\n  ExitShort = 2,\r\n  EnterShort = 3,\r\n}\r\n\r\ninterface StringBoolean {\r\n  [id: string]: boolean;\r\n}\r\n\r\ninterface StrategiesLayoutProps {\r\n  data: StockAnalysis;\r\n}\r\n\r\nconst StrategiesLayout = ({ data }: StrategiesLayoutProps) => {\r\n  var keyPlot = 1098;\r\n  const startPrice = 10000;\r\n  var j = 0;\r\n  var dates: Date[] = [];\r\n  var returnData: number[][] = [];\r\n  var strategyLabels = [\r\n    \"bollinger\",\r\n    \"williams_r\",\r\n    \"RSI\",\r\n    \"Random Forest\",\r\n    \"Buy and Hold\",\r\n  ];\r\n  var legendLabels: string[] = [];\r\n  var trades: number[][] = [];\r\n  var k = 0;\r\n\r\n  var final: JSX.Element[] = [];\r\n  const initEnterLong = 4;\r\n  const initExitLong = 2;\r\n  const initEnterShort = 2;\r\n  const initExitShort = -2;\r\n  const [predictionTerm, updateTerm] = useState(data.term[0]);\r\n  const [longEnter, setLongEnter] = useState(initEnterLong);\r\n  const [longExit, setLongExit] = useState(initExitLong);\r\n  const [shortEnter, setShortEnter] = useState(initEnterShort);\r\n  const [shortExit, setShortExit] = useState(initExitShort);\r\n  const [rsiFlip, setrsiFlip] = useState(50);\r\n\r\n  var strategyLabelsMap: StringBoolean = {};\r\n\r\n  for (i = 0; i < strategyLabels.length; i++) {\r\n    strategyLabelsMap[strategyLabels[i]] = true;\r\n  }\r\n\r\n  const [state, setState] = useState<StringBoolean>(strategyLabelsMap);\r\n  const handleRSIShort = (event: any, value: number | number[]) => {\r\n    if (typeof value == \"number\") {\r\n      setrsiFlip(value);\r\n    }\r\n  };\r\n\r\n  const handleEnterLong = (event: any, value: number | number[]) => {\r\n    if (typeof value == \"number\") {\r\n      setLongEnter(value);\r\n    }\r\n  };\r\n\r\n  const handleExitLong = (event: any, value: number | number[]) => {\r\n    if (typeof value == \"number\") {\r\n      console.log(\"long exit\", value);\r\n      setLongExit(value);\r\n    }\r\n  };\r\n\r\n  const handleEnterShort = (event: any, value: number | number[]) => {\r\n    if (typeof value == \"number\") {\r\n      setShortEnter(value);\r\n    }\r\n  };\r\n\r\n  const handleExitShort = (event: any, value: number | number[]) => {\r\n    if (typeof value == \"number\") {\r\n      setShortExit(value);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event: any, value: number | number[]) => {\r\n    if (typeof value == \"number\") {\r\n      updateTerm(value);\r\n    }\r\n  };\r\n\r\n  /* ************ line chart ***************************/\r\n\r\n  for (var i = 0; i < data[\"dates\"].length; i++) {\r\n    dates.push(new Date(data[\"dates\"][i]));\r\n    returnData[i] = [];\r\n  }\r\n\r\n  //process strategies straight from strategies\r\n  const getType = (vals: string[]): number => {\r\n    var val = 0;\r\n    if (vals[1] === \"enter\") {\r\n      val += 1;\r\n    }\r\n    if (vals[2] === \"short\") {\r\n      val += 2;\r\n    }\r\n    return val;\r\n  };\r\n\r\n  Object.entries(data[\"strategy\"]).forEach(([key, value]) => {\r\n    if (state[key]) {\r\n      for (i = 0; i < value[\"cum_return\"].length; i++) {\r\n        returnData[i][j] = startPrice * (1 + value[\"cum_return\"][i]);\r\n      }\r\n      k = 0;\r\n      for (i = 0; i < data.dates.length; i++) {\r\n        var date1 = new Date(data.dates[i]);\r\n        var date2 = new Date(value[\"actions\"][k][0]);\r\n        if (date1 > date2) {\r\n          k++;\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n      trades[j] = data.dates.map((d) =>\r\n        d === value[\"actions\"][k][0] ? getType(value[\"actions\"][k++]) : -1\r\n      );\r\n      legendLabels.push(key);\r\n      j++;\r\n    }\r\n  });\r\n\r\n  var currentTrade = CurrentPosition.Neutral;\r\n  var changedPostion = LastPositionChange.NoChange;\r\n  var currentPortfolioValue = 10000;\r\n  var tempChanges: number[] = [];\r\n\r\n  // Process data for RSI strategy\r\n  if (state[\"RSI\"]) {\r\n    for (i = 0; i < data.indicators[\"rel_strength\"].length; i++) {\r\n      var predict_move_rsi = data[\"indicators\"][\"rel_strength\"][i];\r\n      changedPostion = LastPositionChange.NoChange;\r\n      //check long position\r\n      if (predict_move_rsi >= rsiFlip) {\r\n        if (currentTrade === CurrentPosition.Short) {\r\n          changedPostion = LastPositionChange.EnterLong;\r\n        }\r\n        currentTrade = CurrentPosition.Long;\r\n        currentPortfolioValue *= 1 + data[\"daily_ret\"][i];\r\n      } else {\r\n        if (currentTrade === CurrentPosition.Long) {\r\n          changedPostion = LastPositionChange.EnterShort;\r\n        }\r\n        currentTrade = CurrentPosition.Short;\r\n        currentPortfolioValue *= 1 - data[\"daily_ret\"][i];\r\n      }\r\n\r\n      returnData[i][j] = currentPortfolioValue;\r\n      tempChanges.push(changedPostion);\r\n    }\r\n\r\n    trades.push(tempChanges);\r\n    legendLabels.push(\"RSI at \" + rsiFlip);\r\n    j++;\r\n  }\r\n\r\n  // Process data for random forest strategy\r\n  var priceExit = 0;\r\n  currentTrade = CurrentPosition.Neutral;\r\n  changedPostion = LastPositionChange.NoChange;\r\n  currentPortfolioValue = 10000;\r\n  tempChanges = [];\r\n\r\n  const enterShort = (i: number) => {\r\n    changedPostion = LastPositionChange.EnterShort;\r\n    priceExit = currentPortfolioValue * (1 - shortExit / 100);\r\n    console.log(\"entered short\", data.dates[i], \"term: \" + predictedMove);\r\n    return CurrentPosition.Short;\r\n  };\r\n\r\n  const enterLong = (i: number) => {\r\n    changedPostion = LastPositionChange.EnterLong;\r\n    priceExit = currentPortfolioValue * (1 + longExit / 100);\r\n    console.log(\"entered long\", data.dates[i], \"term: \" + predictedMove);\r\n    return CurrentPosition.Long;\r\n  };\r\n\r\n  if (state[\"Random Forest\"]) {\r\n    legendLabels.push(\"Random Forest\");\r\n    for (\r\n      i = 0;\r\n      i < data.predict[\"term_\" + predictionTerm].predict.length;\r\n      i++\r\n    ) {\r\n      var predictedMove = data.predict[\"term_\" + predictionTerm].predict[i];\r\n      changedPostion = LastPositionChange.NoChange;\r\n\r\n      //check long position\r\n      if (currentTrade === CurrentPosition.Long) {\r\n        if (currentPortfolioValue >= priceExit) {\r\n          console.log(\"exit long\", data.dates[i], \"term: \" + predictedMove);\r\n          if (predictedMove <= shortEnter) {\r\n            currentTrade = enterShort(i);\r\n          } else {\r\n            currentTrade = CurrentPosition.Neutral;\r\n            changedPostion = LastPositionChange.ExitLong;\r\n          }\r\n        }\r\n      } else if (currentTrade === CurrentPosition.Neutral) {\r\n        if (predictedMove >= longEnter) {\r\n          currentTrade = enterLong(i);\r\n        } else if (predictedMove <= shortEnter) {\r\n          currentTrade = enterShort(i);\r\n        }\r\n      } else {\r\n        // currently shorting\r\n        if (currentPortfolioValue > priceExit) {\r\n          console.log(\"exit short\", data.dates[i], \"term: \" + predictedMove);\r\n          if (predictedMove >= longEnter) {\r\n            currentTrade = enterLong(i);\r\n          } else {\r\n            currentTrade = CurrentPosition.Neutral;\r\n            changedPostion = LastPositionChange.ExitShort;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (currentTrade === CurrentPosition.Long) {\r\n        currentPortfolioValue *= 1 + data[\"daily_ret\"][i];\r\n      } else if (currentTrade === CurrentPosition.Short) {\r\n        currentPortfolioValue *= 1 - data[\"daily_ret\"][i];\r\n      }\r\n      returnData[i][j] = currentPortfolioValue;\r\n      tempChanges.push(changedPostion);\r\n    }\r\n    trades.push(tempChanges);\r\n    j++;\r\n  }\r\n  // add buy and hold strategy...\r\n  if (state[\"Buy and Hold\"]) {\r\n    currentPortfolioValue = 10000;\r\n    tempChanges = [];\r\n    for (i = 0; i < data.daily_ret.length; i++) {\r\n      currentPortfolioValue *= 1 + data.daily_ret[i];\r\n      returnData[i][j] = currentPortfolioValue;\r\n      tempChanges[i] = -1;\r\n    }\r\n    trades.push(tempChanges);\r\n    legendLabels.push(\"Buy and Hold\");\r\n    j++;\r\n  }\r\n\r\n  const handleCheckBoxChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n  };\r\n  const checkboxes = strategyLabels.map(function (val: string) {\r\n    return (\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={state[val]}\r\n            onChange={handleCheckBoxChange}\r\n            name={val}\r\n          ></Checkbox>\r\n        }\r\n        label={val}\r\n      ></FormControlLabel>\r\n    );\r\n  });\r\n\r\n  final.push(\r\n    <Grid item lg={2} key={\"strategies\"}>\r\n      <Card variant=\"outlined\">\r\n        <CardContent>\r\n          <FormControl component=\"fieldset\">\r\n            <FormLabel component=\"legend\">Select Strategies to Show</FormLabel>\r\n            <FormGroup>{checkboxes}</FormGroup>\r\n          </FormControl>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n\r\n  // push strategy filter before ...\r\n  final.push(\r\n    <Grid item lg={4} key={keyPlot}>\r\n      <Card variant=\"outlined\">\r\n        <LineChart\r\n          data={returnData}\r\n          dates={dates}\r\n          trades={trades}\r\n          labels={legendLabels}\r\n          title={\"Strategy Returns for Initial Value $\" + startPrice}\r\n        />\r\n      </Card>\r\n    </Grid>\r\n  );\r\n\r\n  // strategy parameters\r\n\r\n  var marks = [];\r\n  var marksLong = [];\r\n  for (i = 0; i < data.move.length; i++) {\r\n    marks.push({ value: i + 1, label: String(data.move[i] + \"%\") });\r\n    marksLong.push({ value: i, label: String(data.move[i] + \"%\") });\r\n  }\r\n\r\n  var marksTerms: any[] = [];\r\n  for (i = 0; i < data.term.length; i++) {\r\n    marksTerms.push({ value: data.term[i], label: String(data.term[i]) });\r\n  }\r\n\r\n  final.push(\r\n    <Grid key={\"randomForest\"} item lg={2}>\r\n      <Card variant=\"outlined\">\r\n        <Typography id=\"discrete-slider-small-steps\" gutterBottom>\r\n          <b>{\"Random Forest Parameters\"}:</b>\r\n        </Typography>\r\n        <Card variant=\"outlined\">\r\n          <CardContent>\r\n            <Typography id=\"discrete-slider-small-steps\" gutterBottom>\r\n              <b>{\"Enter Long\"}:</b>\r\n            </Typography>\r\n            <p>\r\n              {\"Select cutoff percentage where strategy enters long position\"}\r\n            </p>\r\n            <Slider\r\n              name=\"enterLong\"\r\n              defaultValue={initEnterLong}\r\n              step={1}\r\n              marks={marksLong}\r\n              min={0}\r\n              max={5}\r\n              onChange={handleEnterLong}\r\n              valueLabelDisplay=\"auto\"\r\n            />\r\n          </CardContent>\r\n        </Card>\r\n        <Card variant=\"outlined\">\r\n          <CardContent>\r\n            <Typography id=\"discrete-slider-small-steps\" gutterBottom>\r\n              <b>{\"Exit Long\"}:</b>\r\n            </Typography>\r\n            <p>\r\n              {\"Select cutoff percentage where strategy exits long position\"}\r\n            </p>\r\n            <Slider\r\n              name={\"exitLong\"}\r\n              defaultValue={initExitLong}\r\n              step={0.01}\r\n              marks={[]}\r\n              min={0}\r\n              max={5}\r\n              onChange={handleExitLong}\r\n              valueLabelDisplay=\"auto\"\r\n            />\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card variant=\"outlined\">\r\n          <CardContent>\r\n            <Typography id=\"discrete-slider-small-steps\" gutterBottom>\r\n              <b>{\"Exit Short\"}:</b>\r\n            </Typography>\r\n            <p>\r\n              {\"Select cutoff percentage where strategy exits short position\"}\r\n            </p>\r\n            <Slider\r\n              name={\"exitShort\"}\r\n              defaultValue={initExitShort}\r\n              step={0.01}\r\n              marks={[]}\r\n              min={-5}\r\n              max={0}\r\n              onChange={handleExitShort}\r\n              valueLabelDisplay=\"auto\"\r\n            />\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card variant=\"outlined\">\r\n          <CardContent>\r\n            <Typography id=\"discrete-slider-small-steps\" gutterBottom>\r\n              <b>{\"Enter Short\"}:</b>\r\n            </Typography>\r\n            <p>\r\n              {\"Select cutoff percentage where strategy enters short position\"}\r\n            </p>\r\n            <Slider\r\n              name={\"enterShort\"}\r\n              defaultValue={initEnterShort}\r\n              marks={marks}\r\n              min={1}\r\n              max={6}\r\n              onChange={handleEnterShort}\r\n              valueLabelDisplay=\"auto\"\r\n            />\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card variant=\"outlined\">\r\n          <CardContent>\r\n            <Typography id=\"discrete-slider-small-steps\" gutterBottom>\r\n              <b>{\"Enter prediction term\"}:</b>\r\n            </Typography>\r\n            <p>{\"Select length of term that random forest trains on\"}</p>\r\n            <Slider\r\n              defaultValue={5}\r\n              step={null}\r\n              marks={marksTerms}\r\n              min={0}\r\n              max={40}\r\n              onChange={handleChange}\r\n              valueLabelDisplay=\"auto\"\r\n            />\r\n          </CardContent>\r\n        </Card>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n\r\n  final.push(\r\n    <SliderCard\r\n      onChange={handleRSIShort}\r\n      title={\"RSI\"}\r\n      description={\"Select RSI value to go long/short\"}\r\n      minVal={1}\r\n      maxVal={99}\r\n      defaultValue={50}\r\n      labels={[]}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <div className=\"StartegiesLayout\">\r\n      <Grid container spacing={1}>\r\n        {final}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StrategiesLayout;\r\n","import React from \"react\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./Sidebar.scss\";\r\n\r\nconst Sidebar = () => {\r\n  const PageTabName = [\"Home\", \"Indicators\", \"Strategies\"];\r\n\r\n  return (\r\n    <Drawer open variant=\"permanent\" anchor=\"left\" className=\"Sidebar\">\r\n      <List>\r\n        {PageTabName.map((text) => (\r\n          <NavLink to={text.toLowerCase()}>\r\n            <ListItem button key={text}>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          </NavLink>\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { ComponentClass, FunctionComponent } from \"react\";\r\nimport Sidebar from \"../sidebar/Sidebar\";\r\nimport \"./MainContainer.scss\";\r\n\r\ntype Component = FunctionComponent<any> | ComponentClass<any>;\r\n\r\nconst withMainContainer = (Comp: Component) => (props: any) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"sidebar_container\">\r\n        <Sidebar />\r\n      </div>\r\n      <div className=\"main_container\">\r\n        <Comp {...props} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withMainContainer;\r\n","import * as React from \"react\";\r\nimport withMainContainer from \"../main/MainContainer\";\r\n\r\nconst Page404 = () => {\r\n  return (\r\n    <div className=\"error-pg-404\">\r\n      <h1>Error 404:</h1>\r\n      <h3>The page you requested does not exist</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withMainContainer(Page404);\r\n","import React from \"react\";\r\nimport withMainContainer from \"../main/MainContainer\";\r\nimport { ReactComponent as StockMarket } from \"../../images/stock_color.svg\";\r\nimport Stocks from \"../../images/stocks.jpg\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"Home\">\r\n      <img\r\n        src={Stocks}\r\n        className=\"StocksImage\"\r\n        style={{ height: 720, width: 1280 }}\r\n      />\r\n      <h1>Team 128: TBD</h1>\r\n      <p>\r\n        The goal of this visualization tool is to evaluate the effectiveness of\r\n        indicators that can be implemented in machine learning models for\r\n        predicting stock market prices. Key features of this tool includes:\r\n        <li>\r\n          The ability to visually and interactively determine the effectiveness\r\n          of market indicators based on historical data.\r\n        </li>\r\n        <li>\r\n          The flexibility to investigate the performance of indicators under\r\n          different market conditions.\r\n        </li>\r\n        <li>\r\n          Present a comparison of the performance of algorithms implementing the\r\n          selected indicator\r\n        </li>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withMainContainer(Home);\r\n","export const FormatDate = (date: Date | null): string => {\r\n  const d = date ?? new Date();\r\n  let month = (d.getMonth() + 1).toString();\r\n  let day = d.getDate().toString();\r\n  const year = d.getFullYear();\r\n\r\n  if (month.length < 2) {\r\n    month = \"0\" + month;\r\n  }\r\n  if (day.length < 2) {\r\n    day = \"0\" + day;\r\n  }\r\n\r\n  return [year, month, day].join(\"-\");\r\n};\r\n","import * as d3 from \"d3\";\r\n\r\nexport class ChartUtils {\r\n  static initChart(\r\n    svg: d3.Selection<null, unknown, null, undefined>,\r\n    title: string,\r\n    xlabel: string,\r\n    ylabel: string,\r\n    xScale: any,\r\n    yScale: any,\r\n    width: number,\r\n    height: number,\r\n    axis_width: number,\r\n    axis_height: number,\r\n    margin_top: number,\r\n    margin_left: number\r\n  ): void {\r\n    svg\r\n      .append(\"text\")\r\n      .attr(\"x\", width / 2)\r\n      .attr(\"y\", -margin_top / 3)\r\n      .attr(\"font-size\", \"24px\")\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .text(title);\r\n\r\n    svg\r\n      .append(\"text\")\r\n      .attr(\"x\", width / 2)\r\n      .attr(\"y\", height + (2 * margin_top) / 3)\r\n      .attr(\"font-size\", \"16px\")\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .text(xlabel);\r\n    svg\r\n      .append(\"text\")\r\n      .attr(\"transform\", function (d) {\r\n        return \"rotate(-90)\";\r\n      })\r\n      .attr(\"x\", -height / 2)\r\n      .attr(\"y\", (-2 * margin_left) / 3)\r\n      .attr(\"font-size\", \"16px\")\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .text(ylabel);\r\n    svg\r\n      .append(\"g\")\r\n      .attr(\"transform\", \"translate(0,\" + axis_height + \")\")\r\n      .call(d3.axisBottom(xScale).ticks(5));\r\n    svg\r\n      .append(\"g\")\r\n      .attr(\"transform\", \"translate(\" + axis_width + \", 0)\")\r\n      .attr(\"class\", \"y axis\")\r\n      .call(d3.axisLeft(yScale));\r\n  }\r\n\r\n  static undefinedHandler(valToCheck: any, errVal: number): number {\r\n    if (valToCheck) return valToCheck;\r\n    return errVal;\r\n  }\r\n\r\n  static createLegend(\r\n    svg: d3.Selection<null, unknown, null, undefined>,\r\n    legendData: any[],\r\n    width: number,\r\n    height: number\r\n  ) {\r\n    const yOffsetInc = 25;\r\n    const radius = 6;\r\n    var yOffset = height - (legendData.length + 1) * yOffsetInc;\r\n\r\n    //legend\r\n    legendData.forEach((d) => {\r\n      if (d[\"isLine\"]) {\r\n        var line2 = d3\r\n          .line()\r\n          .x(function (d) {\r\n            return d[0];\r\n          })\r\n          .y(function (d) {\r\n            return d[1];\r\n          })\r\n          .curve(d3.curveMonotoneX);\r\n\r\n        var dataset: [number, number][] = [\r\n          [20, yOffset],\r\n          [30, yOffset],\r\n        ];\r\n        svg\r\n          .append(\"path\")\r\n          .datum(dataset)\r\n          .style(\"stroke\", d.color)\r\n          .attr(\"stroke-width\", 3)\r\n          .style(\"fill\", \"none\")\r\n          .attr(\"d\", line2);\r\n      } else {\r\n        svg\r\n          .append(\"circle\")\r\n          .attr(\"cx\", 25)\r\n          .attr(\"cy\", yOffset)\r\n          .attr(\"r\", radius)\r\n          .style(\"fill\", d.color)\r\n          .style(\"stroke\", d.color);\r\n        if (d[\"hollow\"]) {\r\n          svg\r\n            .append(\"circle\")\r\n            .attr(\"cx\", 25)\r\n            .attr(\"cy\", yOffset)\r\n            .attr(\"r\", (2 * radius) / 3)\r\n            .style(\"fill\", \"white\")\r\n            .style(\"stroke\", \"white\");\r\n        }\r\n      }\r\n      svg\r\n        .append(\"text\")\r\n        .attr(\"x\", 35)\r\n        .attr(\"y\", 5 + yOffset)\r\n        .text(d.name)\r\n        .style(\"font-size\", \"12px\")\r\n        .attr(\"alignment-baseline\", \"middle\");\r\n      yOffset += yOffsetInc;\r\n    });\r\n  }\r\n}\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { ChartUtils } from \"../utils/ChartUtils\";\r\n\r\ninterface ScatterChartProps {\r\n  data: number[][];\r\n  label: string;\r\n}\r\n\r\nconst ScatterChart = ({ data, label }: ScatterChartProps) => {\r\n  const canvas = useRef(null);\r\n  const margin = { top: 50, right: 100, bottom: 50, left: 100 };\r\n  const width = 500;\r\n  const height = 500;\r\n\r\n  var maxX = data[0][0];\r\n  var minX = data[0][0];\r\n  var maxY = data[0][1];\r\n  var minY = data[0][1];\r\n  for (var i = 1; i < data.length; i++) {\r\n    if (data[i][0] > maxX) {\r\n      maxX = data[i][0];\r\n    }\r\n    if (data[i][0] < minX) {\r\n      minX = data[i][0];\r\n    }\r\n    if (data[i][1] > maxY) {\r\n      maxY = data[i][1];\r\n    }\r\n    if (data[i][1] < minY) {\r\n      minY = data[i][1];\r\n    }\r\n  }\r\n\r\n  const xScale = d3.scaleLinear().range([0, width]).domain([minX, maxX]);\r\n  const yScale = d3.scaleLinear().range([height, 0]).domain([minY, maxY]);\r\n\r\n  const addXYScatter = (\r\n    svg: d3.Selection<null, unknown, null, undefined>,\r\n    xScale: any,\r\n    yScale: any,\r\n    color: string,\r\n    radius: number\r\n  ) => {\r\n    svg\r\n      .selectAll(\"circle\")\r\n      .data(data)\r\n      .enter()\r\n      .append(\"circle\")\r\n      .attr(\"cx\", function (d: number[]) {\r\n        return xScale(d[0]);\r\n      })\r\n      .attr(\"cy\", function (d: number[]) {\r\n        return yScale(d[1]);\r\n      })\r\n      .attr(\"r\", radius)\r\n      .style(\"fill\", color);\r\n  };\r\n\r\n  const drawScatterChart = (label: string, xScale: any, yScale: any) => {\r\n    const g = d3.select(canvas.current);\r\n    g.selectAll(\"*\").remove();\r\n\r\n    const possibleY = ChartUtils.undefinedHandler(\r\n      d3.max([0, 1 - maxY / (maxY - minY)]),\r\n      0\r\n    );\r\n    const yAxisShift = ChartUtils.undefinedHandler(d3.min([1, possibleY]), 1);\r\n\r\n    ChartUtils.initChart(\r\n      g,\r\n      label,\r\n      \"% gain\",\r\n      \"value\",\r\n      xScale,\r\n      yScale,\r\n      width,\r\n      height,\r\n      (1 - ChartUtils.undefinedHandler(d3.min([1, maxX / (maxX - minX)]), 0)) *\r\n        width,\r\n      yAxisShift * height,\r\n      margin.top,\r\n      margin.left\r\n    );\r\n    addXYScatter(g, xScale, yScale, \"#d95f02\", 5);\r\n  };\r\n\r\n  useEffect(() => {\r\n    drawScatterChart(label, xScale, yScale);\r\n  });\r\n\r\n  //https://medium.com/stationfive/how-to-create-a-pie-chart-with-d3-js-and-react-hooks-part-1-81bcd7f39b32\r\n  return (\r\n    <svg\r\n      width={width + margin.left + margin.right}\r\n      height={height + margin.top + margin.bottom}\r\n    >\r\n      <g ref={canvas} transform={`translate(${margin.left},${margin.top})`} />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default ScatterChart;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { ChartUtils } from \"../utils/ChartUtils\";\r\n\r\ninterface DoubleHorizontalBarChartProps {\r\n  labels: string[];\r\n  data: number[][];\r\n}\r\n\r\nconst DoubleHorizontalBarChart = ({\r\n  labels,\r\n  data,\r\n}: DoubleHorizontalBarChartProps) => {\r\n  const titles: string[] = [\"Pearson Coefficient\", \"Importance Values\"];\r\n  const canvas = useRef(null);\r\n\r\n  const margin = { top: 50, right: 0, bottom: 50, left: 225 };\r\n  const width = 300;\r\n  const height = 250;\r\n\r\n  var xScaleRight = d3\r\n    .scaleLinear()\r\n    .range([0, width / 2])\r\n    .domain([0, ChartUtils.undefinedHandler(d3.max(data.map((d) => d[2])), 0)]);\r\n\r\n  var xScaleLeft = d3\r\n    .scaleLinear()\r\n    .range([0, width / 2])\r\n    .domain([0, ChartUtils.undefinedHandler(d3.max(data.map((d) => d[1])), 0)]);\r\n\r\n  var yScale = d3.scaleBand().range([0, height]).domain(labels);\r\n\r\n  const drawChart = () => {\r\n    const g = d3.select(canvas.current);\r\n    g.selectAll(\"*\").remove();\r\n\r\n    for (var i = 0; i < labels.length; i++) {\r\n      g.append(\"text\")\r\n        .attr(\"x\", -10)\r\n        .attr(\r\n          \"y\",\r\n          ChartUtils.undefinedHandler(yScale(labels[i]), 0) +\r\n            yScale.bandwidth() / 1.9\r\n        )\r\n        .attr(\"font-size\", \"16px\")\r\n        .attr(\"text-anchor\", \"end\")\r\n        .text(labels[i]);\r\n    }\r\n\r\n    g.append(\"text\")\r\n      .attr(\"x\", width / 2 - 10)\r\n      .attr(\"y\", -20)\r\n      .attr(\"font-size\", \"16px\")\r\n      .attr(\"text-anchor\", \"end\")\r\n      .text(titles[0]);\r\n\r\n    g.append(\"text\")\r\n      .attr(\"x\", width / 2 + 10)\r\n      .attr(\"y\", -20)\r\n      .attr(\"font-size\", \"16px\")\r\n      .attr(\"text-anchor\", \"start\")\r\n      .text(titles[1]);\r\n\r\n    g.selectAll(\"rect\")\r\n      .data(data)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", function (d: number[]): number {\r\n        return width / 2 - xScaleLeft(d[1]);\r\n      })\r\n      .attr(\"y\", function (d: any): number {\r\n        return ChartUtils.undefinedHandler(yScale(labels[d[0]]), 0);\r\n      })\r\n      .attr(\"width\", function (d: number[]): number {\r\n        return xScaleLeft(d[1]);\r\n      })\r\n      .attr(\"height\", yScale.bandwidth() - 2)\r\n      .style(\"fill\", \"steelblue\");\r\n\r\n    g.selectAll(\"rect2\")\r\n      .data(data)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", width / 2 + 5)\r\n      .attr(\"y\", function (d: any): number {\r\n        return ChartUtils.undefinedHandler(yScale(labels[d[0]]), 0);\r\n      })\r\n      .attr(\"width\", function (d: number[]): number {\r\n        return xScaleRight(d[2]);\r\n      })\r\n      .attr(\"height\", yScale.bandwidth() - 2)\r\n      .style(\"fill\", \"red\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    drawChart();\r\n  }, []);\r\n\r\n  return (\r\n    <svg\r\n      width={width + margin.left + margin.right}\r\n      height={height + margin.top + margin.bottom}\r\n    >\r\n      <g ref={canvas} transform={`translate(${margin.left},${margin.top})`} />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default DoubleHorizontalBarChart;\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\ninterface SliderCardProps {\r\n  onChange: (event: any, value: number | number[]) => void;\r\n  title: string;\r\n  description: string;\r\n  minVal: number;\r\n  maxVal: number;\r\n  defaultValue: number;\r\n  labels: number[];\r\n}\r\n\r\nconst SliderCard = ({\r\n  onChange,\r\n  title,\r\n  description,\r\n  minVal,\r\n  maxVal,\r\n  defaultValue,\r\n  labels,\r\n}: SliderCardProps) => {\r\n  var marks = [];\r\n  for (var i = 0; i < labels.length; i++) {\r\n    marks.push({ value: i, label: String(labels[i] + \"%\") });\r\n  }\r\n  return (\r\n    <Grid item lg={2}>\r\n      <Card variant=\"outlined\">\r\n        <CardContent>\r\n          <Typography id=\"discrete-slider-small-steps\" gutterBottom>\r\n            <b>{title}:</b>\r\n          </Typography>\r\n          <p>{description}</p>\r\n          <Slider\r\n            defaultValue={defaultValue}\r\n            step={1}\r\n            marks={marks}\r\n            min={minVal}\r\n            max={maxVal}\r\n            onChange={onChange}\r\n            valueLabelDisplay=\"auto\"\r\n          />\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SliderCard;\r\n","import ScatterChart from \"../d3/ScatterChart\";\r\nimport React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport DoubleHorizontalBarChart from \"../d3/DoubleHorizontalBarChart\";\r\nimport SliderCard from \"../ui/SliderCard\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { StockAnalysis } from \"../../types\";\r\nimport withMainContainer from \"../main/MainContainer\";\r\n\r\ninterface StringBoolean {\r\n  [id: string]: boolean;\r\n}\r\n\r\ninterface IndicatorsLayoutProps {\r\n  data: StockAnalysis;\r\n}\r\n\r\ninterface IndicatorTextMapInterface {\r\n  [key: string]: {\r\n    label: string;\r\n    description: string;\r\n    more: string;\r\n  };\r\n}\r\n\r\nconst IndicatorTextMap: IndicatorTextMapInterface = {\r\n  acc_dist_index: {\r\n    label: \"Accumulation/Distribution Index\",\r\n    description: \"An indicator intended to relate price and volume.\",\r\n    more: \"https://en.wikipedia.org/wiki/Accumulation/distribution_index\",\r\n  },\r\n  chaikin_money_flow: {\r\n    label: \"Chaikin Money flow\",\r\n    description:\r\n      \"Measures the amount of Money Flow Volume over a specific period.\",\r\n    more:\r\n      \"http://stockcharts.com/school/doku.php?id=chart_school:technical_indicators:chaikin_money_flow_cmf\",\r\n  },\r\n  ease_of_move: {\r\n    label: \"Ease of Movement\",\r\n    description:\r\n      \"Relates an asset's price change to its volume and is particularly useful for assessing the strength of a trend.\",\r\n    more: \"https://en.wikipedia.org/wiki/Ease_of_movement\",\r\n  },\r\n  williams_r: {\r\n    label: \"Williams R\",\r\n    description:\r\n      \"Reflects the level of the close relative to the highest high for the look-back period. \",\r\n    more:\r\n      \"https://school.stockcharts.com/doku.php?id=technical_indicators:williams_r\",\r\n  },\r\n  rel_strength: {\r\n    label: \"Relative Strength Index\",\r\n    description:\r\n      \"Compares the magnitude of recent gains and losses over a specified time period to measure speed and change of price movements of a security.\",\r\n    more: \"https://www.investopedia.com/terms/r/rsi.asp\",\r\n  },\r\n};\r\n\r\nexport const IndicatorsLayout = ({ data }: IndicatorsLayoutProps) => {\r\n  var final: JSX.Element[] = [];\r\n  var doubleData = [];\r\n  var key = \"fasdklj\";\r\n  var keyPlot = 1098;\r\n  var termType: string = \"term_5\";\r\n  const p_values: string = \"p_values\";\r\n\r\n  var labelStrings: string[] = data.indicator_list;\r\n  var labels: StringBoolean = {};\r\n\r\n  Object.entries(data.indicators).forEach(([key]) => {\r\n    labels[key] = true;\r\n  });\r\n\r\n  const [predictionTerm, updateTerm] = useState(5);\r\n\r\n  const [state, setState] = useState<StringBoolean>(labels);\r\n  const handleChange = (event: any, value: number | number[]) => {\r\n    if (typeof value == \"number\") {\r\n      updateTerm(value);\r\n    }\r\n  };\r\n\r\n  const handleCheckBoxChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setState({ ...state, [event.target.value]: event.target.checked });\r\n  };\r\n\r\n  const addGridOfX = (val: number) => {\r\n    final.push(<Grid item lg={2}></Grid>);\r\n  };\r\n\r\n  addGridOfX(5);\r\n\r\n  /******************* double bar chart *****************************/\r\n  for (var i = 0; i < data.f_regression[termType][p_values].length; i++) {\r\n    doubleData.push([\r\n      i,\r\n      data.predict[termType][\"importance_values\"][i],\r\n      data.f_regression[termType][p_values][i],\r\n    ]);\r\n  }\r\n\r\n  final.push(\r\n    <Grid item lg={4} key={key}>\r\n      <Card variant=\"outlined\">\r\n        <DoubleHorizontalBarChart\r\n          labels={labelStrings.map((val) => IndicatorTextMap[val].label)}\r\n          data={doubleData}\r\n        />\r\n        <p style={{ textAlign: \"center\" }}>\r\n          This plot shows indicators most likely to predict future stock\r\n          direction\r\n        </p>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n\r\n  /*** slider + indicator card **********/\r\n\r\n  const checkboxes = labelStrings.map(function (val: string) {\r\n    return (\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={state[val]}\r\n            onChange={handleCheckBoxChange}\r\n            value={val}\r\n          ></Checkbox>\r\n        }\r\n        label={IndicatorTextMap[val].label}\r\n      ></FormControlLabel>\r\n    );\r\n  });\r\n\r\n  final.push(\r\n    <Grid item lg={2}>\r\n      <Card variant=\"outlined\">\r\n        <CardContent>\r\n          <FormControl component=\"fieldset\">\r\n            <FormLabel component=\"legend\">Select Indicators</FormLabel>\r\n            <FormGroup>{checkboxes}</FormGroup>\r\n          </FormControl>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n\r\n  final.push(\r\n    <SliderCard\r\n      onChange={handleChange}\r\n      title={\"Enter prediction term\"}\r\n      description={\"Select term to compare gain vs indicator\"}\r\n      minVal={1}\r\n      maxVal={data.dates.length - 5}\r\n      defaultValue={1}\r\n      labels={[]}\r\n    />\r\n  );\r\n\r\n  /*** Scatter Plots ****************** */\r\n  keyPlot++;\r\n\r\n  Object.entries(data.indicators).forEach(([key, value]) => {\r\n    //console.log(labels.get(key));\r\n    if (state[key]) {\r\n      var scatterData: any[][] = [];\r\n      for (var i = 0; i < data.dates.length - predictionTerm; i++) {\r\n        scatterData[i] = [];\r\n        scatterData[i].push(\r\n          data.cum_return[i + predictionTerm] - data.cum_return[i]\r\n        );\r\n        scatterData[i].push(value[i]);\r\n      }\r\n      final.push(\r\n        <Grid item lg={4} key={key}>\r\n          <Card variant=\"outlined\">\r\n            <ScatterChart\r\n              data={scatterData}\r\n              label={IndicatorTextMap[key].label}\r\n            />\r\n          </Card>\r\n          <p style={{ textAlign: \"center\" }}>\r\n            {IndicatorTextMap[key].description}\r\n          </p>\r\n          <div className=\"MoreInfo\" style={{ textAlign: \"right\" }}>\r\n            <a\r\n              href={IndicatorTextMap[key].more}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              {\"For More Info\"}\r\n            </a>\r\n          </div>\r\n        </Grid>\r\n      );\r\n      keyPlot++;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"IndicatorLayout\">\r\n      <Grid container spacing={1}>\r\n        {final}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withMainContainer(IndicatorsLayout);\r\n","import React, { useState } from \"react\";\r\nimport withMainContainer from \"../main/MainContainer\";\r\nimport { StockAnalysis } from \"../../types\";\r\nimport { CircularProgress, Grid, Button, Input } from \"@material-ui/core\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport axios from \"axios\";\r\nimport { FormatDate } from \"../utils/FormatDate\";\r\nimport { IndicatorsLayout } from \"./Indicators\";\r\n\r\n// const API_ENDPOINT = \"http://dvateam128.webfactional.com/api/analysis\";\r\n// const API_ENDPOINT =\r\n//   \"http://dvateam128.webfactional.com/api/api/analysis/example\";\r\nconst API_ENDPOINT = \"/api/analysis/example\";\r\n\r\nconst IndicatorsPage = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [ticker, setTicker] = useState(\"\");\r\n  const [endDate, setEndDate] = useState<Date | null>(new Date()); // today\r\n  const tempDate = new Date();\r\n  tempDate?.setMonth(tempDate.getMonth() - 3);\r\n  const [startDate, setStartDate] = useState<Date | null>(tempDate); // 3 months ago\r\n  const [data, setData] = useState<StockAnalysis>();\r\n\r\n  const httpClient = axios.create();\r\n  // httpClient.defaults.timeout = 20000;\r\n\r\n  const getData = async () => {\r\n    setLoading(true);\r\n    const response = await httpClient.get(API_ENDPOINT, {\r\n      params: {\r\n        symbol: ticker,\r\n        start_date: FormatDate(startDate),\r\n        end_date: FormatDate(endDate),\r\n      },\r\n    });\r\n    const { status, statusText, data } = response;\r\n    console.log(response);\r\n    if (status == 200) {\r\n      setData(data);\r\n      setLoading(false);\r\n    } else {\r\n      setLoading(false);\r\n      console.log(status, statusText);\r\n      throw new Error(statusText);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"IndicatorPage\">\r\n      <h1>Indicators</h1>\r\n      <p>\r\n        This page is used to determine which indicators are useful in a model to\r\n        predict stock direction. Please enter the Stock Ticker, the Start Date,\r\n        End Date and then run!\r\n      </p>\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <Grid container justify=\"space-around\">\r\n          <Input\r\n            placeholder=\"Enter Stock Ticker\"\r\n            inputProps={{ \"aria-label\": \"description\" }}\r\n            onChange={(event: { target: { value: any } }) =>\r\n              setTicker(event?.target.value)\r\n            }\r\n          />\r\n          <KeyboardDatePicker\r\n            margin=\"normal\"\r\n            id=\"date-picker-dialog\"\r\n            label=\"Start Date\"\r\n            format=\"MM/dd/yyyy\"\r\n            value={startDate}\r\n            onChange={setStartDate}\r\n            KeyboardButtonProps={{\r\n              \"aria-label\": \"change date\",\r\n            }}\r\n          />\r\n          <KeyboardDatePicker\r\n            margin=\"normal\"\r\n            id=\"date-picker-dialog\"\r\n            label=\"End Date\"\r\n            format=\"MM/dd/yyyy\"\r\n            value={endDate}\r\n            onChange={setEndDate}\r\n            KeyboardButtonProps={{\r\n              \"aria-label\": \"change date\",\r\n            }}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => getData()}\r\n            disabled={!ticker}\r\n          >\r\n            Run\r\n          </Button>\r\n        </Grid>\r\n      </MuiPickersUtilsProvider>\r\n      {loading ? (\r\n        <CircularProgress style={{ alignContent: \"center\", height: \"40px\" }} />\r\n      ) : (\r\n        data && <IndicatorsLayout data={data} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withMainContainer(IndicatorsPage);\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { ChartUtils } from \"../utils/ChartUtils\";\r\n\r\nconst colors = [\"#e41a1c\", \"#377eb8\", \"#4daf4a\", \"#984ea3\", \"#ff7f00\"];\r\n\r\ninterface LineChartProps {\r\n  data: number[][];\r\n  dates: Date[];\r\n  trades: number[][];\r\n  labels: string[];\r\n  title: string;\r\n}\r\n\r\nconst LineChart = ({ data, dates, trades, labels, title }: LineChartProps) => {\r\n  const canvas = useRef(null);\r\n\r\n  const margin = { top: 50, right: 100, bottom: 50, left: 100 };\r\n  const width = 500;\r\n  const height = 500;\r\n  var maxY = data[0][0];\r\n  for (var i = 0; i < data.length; i++) {\r\n    const tempValue = ChartUtils.undefinedHandler(d3.max(data[i]), 0);\r\n    if (tempValue > maxY) {\r\n      maxY = tempValue;\r\n    }\r\n  }\r\n\r\n  const xScale = d3\r\n    .scaleTime()\r\n    .range([0, width])\r\n    .domain([\r\n      ChartUtils.undefinedHandler(d3.min(dates), 0),\r\n      ChartUtils.undefinedHandler(d3.max(dates), 0),\r\n    ]);\r\n  const yScale = d3.scaleLinear().range([height, 0]).domain([0, maxY]);\r\n\r\n  const addChartLine = (\r\n    dataset: [any, number][],\r\n    svg: d3.Selection<null, unknown, null, undefined>,\r\n    color: string\r\n  ) => {\r\n    var line2 = d3\r\n      .line()\r\n      .x(function (d) {\r\n        return xScale(d[0]);\r\n      })\r\n      .y(function (d) {\r\n        return yScale(d[1]);\r\n      })\r\n      .curve(d3.curveMonotoneX);\r\n\r\n    svg\r\n      .append(\"path\")\r\n      .datum(dataset)\r\n      .style(\"stroke\", color)\r\n      .attr(\"stroke-width\", 1.5)\r\n      .style(\"fill\", \"none\")\r\n      .attr(\"d\", line2);\r\n  };\r\n\r\n  const addChartSymbol = (\r\n    svg: d3.Selection<null, unknown, null, undefined>,\r\n    dataset: [any, number][],\r\n    symbolClass: string,\r\n    hasNoFill: boolean,\r\n    color: string\r\n  ) => {\r\n    svg\r\n      .selectAll(symbolClass)\r\n      .data(dataset)\r\n      .enter()\r\n      .append(\"circle\")\r\n      .attr(\"r\", 5)\r\n      .attr(\"cx\", function (d) {\r\n        return xScale(d[0]);\r\n      })\r\n      .attr(\"cy\", function (d) {\r\n        return yScale(d[1]);\r\n      })\r\n      .style(\"fill\", color);\r\n\r\n    if (hasNoFill) {\r\n      svg\r\n        .selectAll(symbolClass + \"2\")\r\n        .data(dataset)\r\n        .enter()\r\n        .append(\"circle\")\r\n        .attr(\"r\", 3)\r\n        .attr(\"cx\", (d) => xScale(d[0]))\r\n        .attr(\"cy\", (d) => yScale(d[1]))\r\n        .style(\"fill\", \"white\");\r\n    }\r\n  };\r\n\r\n  const drawLineChart = () => {\r\n    const g = d3.select(canvas.current);\r\n    g.selectAll(\"*\").remove();\r\n\r\n    ChartUtils.initChart(\r\n      g,\r\n      title,\r\n      \"Time\",\r\n      \"Portfolio Value ($)\",\r\n      xScale,\r\n      yScale,\r\n      width,\r\n      height,\r\n      0,\r\n      height,\r\n      margin.top,\r\n      margin.left\r\n    );\r\n    for (var i = 0; i < data[0].length; i++) {\r\n      var dataset: [any, number][] = [];\r\n      for (var j = 0; j < dates.length; j++) {\r\n        dataset.push([dates[j], data[j][i]]);\r\n      }\r\n      addChartLine(dataset, g, colors[i % colors.length]);\r\n    }\r\n\r\n    var enterLong: [any, number][] = [];\r\n    var exitLong: [any, number][] = [];\r\n    var enterShort: [any, number][] = [];\r\n    var exitShort: [any, number][] = [];\r\n\r\n    //1 = enter //2 = short\r\n    for (i = 0; i < trades.length; i++) {\r\n      for (j = 0; j < dates.length; j++) {\r\n        if (trades[i][j] === 0) {\r\n          exitLong.push([dates[j], data[j][i]]);\r\n        } else if (trades[i][j] === 1) {\r\n          enterLong.push([dates[j], data[j][i]]);\r\n        } else if (trades[i][j] === 2) {\r\n          exitShort.push([dates[j], data[j][i]]);\r\n        } else if (trades[i][j] === 3) {\r\n          enterShort.push([dates[j], data[j][i]]);\r\n        }\r\n      }\r\n    }\r\n\r\n    addChartSymbol(g, enterLong, \"enterLong\", false, \"green\");\r\n    addChartSymbol(g, exitLong, \"enterLong\", true, \"green\");\r\n    addChartSymbol(g, enterShort, \"enterLong\", false, \"red\");\r\n    addChartSymbol(g, exitShort, \"enterLong\", true, \"red\");\r\n\r\n    var legendData = [];\r\n    for (i = 0; i < labels.length; i++) {\r\n      legendData.push({\r\n        color: colors[i % colors.length],\r\n        name: labels[i],\r\n        isLine: true,\r\n      });\r\n    }\r\n    legendData.push({ color: \"red\", name: \"Enter Short\", hollow: false });\r\n    legendData.push({ color: \"red\", name: \"Exit Short\", hollow: true });\r\n    legendData.push({ color: \"green\", name: \"Enter Long\" });\r\n    legendData.push({ color: \"green\", name: \"Exit Long\", hollow: true });\r\n\r\n    ChartUtils.createLegend(g, legendData, width, height);\r\n  };\r\n\r\n  useEffect(() => {\r\n    drawLineChart();\r\n  });\r\n\r\n  //https://medium.com/stationfive/how-to-create-a-pie-chart-with-d3-js-and-react-hooks-part-1-81bcd7f39b32\r\n  return (\r\n    <svg\r\n      width={width + margin.left + margin.right}\r\n      height={height + margin.top + margin.bottom}\r\n    >\r\n      <g ref={canvas} transform={`translate(${margin.left},${margin.top})`} />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n","import React, { useState } from \"react\";\r\nimport withMainContainer from \"../main/MainContainer\";\r\nimport { StockAnalysis } from \"../../types\";\r\nimport { CircularProgress, Grid, Button, Input } from \"@material-ui/core\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport axios from \"axios\";\r\nimport StrategiesLayout from \"./Strategies\";\r\nimport { FormatDate } from \"../utils/FormatDate\";\r\n\r\n// const API_ENDPOINT = \"http://dvateam128.webfactional.com/api/analysis\";\r\n// const API_ENDPOINT =\r\n//   \"http://dvateam128.webfactional.com/api/api/analysis/example\";\r\nconst API_ENDPOINT = \"/api/analysis/example\";\r\n\r\nconst StrategiesPage = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [ticker, setTicker] = useState(\"\");\r\n  const [endDate, setEndDate] = useState<Date | null>(new Date()); // today\r\n  const tempDate = new Date();\r\n  tempDate?.setMonth(tempDate.getMonth() - 3);\r\n  const [startDate, setStartDate] = useState<Date | null>(tempDate); // 3 months ago\r\n  const [data, setData] = useState<StockAnalysis>();\r\n\r\n  const httpClient = axios.create();\r\n  // httpClient.defaults.timeout = 20000;\r\n\r\n  const getData = async () => {\r\n    setLoading(true);\r\n    const response = await httpClient.get(API_ENDPOINT, {\r\n      params: {\r\n        symbol: ticker,\r\n        start_date: FormatDate(startDate),\r\n        end_date: FormatDate(endDate),\r\n      },\r\n    });\r\n    const { status, statusText, data } = response;\r\n    console.log(response);\r\n    if (status == 200) {\r\n      setData(data);\r\n      setLoading(false);\r\n    } else {\r\n      setLoading(false);\r\n      console.log(status, statusText);\r\n      throw new Error(statusText);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"StrategiesPage\">\r\n      <h1>Strategies</h1>\r\n      <p>\r\n        This page is used to determine which strategies are useful in a model to\r\n        predict stock direction. Please enter the Stock Ticker, the Start Date,\r\n        End Date and then run!\r\n      </p>\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <Grid container justify=\"space-around\">\r\n          <Input\r\n            placeholder=\"Enter Stock Ticker\"\r\n            inputProps={{ \"aria-label\": \"description\" }}\r\n            onChange={(event: { target: { value: any } }) =>\r\n              setTicker(event?.target.value)\r\n            }\r\n          />\r\n          <KeyboardDatePicker\r\n            margin=\"normal\"\r\n            id=\"date-picker-dialog\"\r\n            label=\"Start Date\"\r\n            format=\"MM/dd/yyyy\"\r\n            value={startDate}\r\n            onChange={setStartDate}\r\n            KeyboardButtonProps={{\r\n              \"aria-label\": \"change date\",\r\n            }}\r\n          />\r\n          <KeyboardDatePicker\r\n            margin=\"normal\"\r\n            id=\"date-picker-dialog\"\r\n            label=\"End Date\"\r\n            format=\"MM/dd/yyyy\"\r\n            value={endDate}\r\n            onChange={setEndDate}\r\n            KeyboardButtonProps={{\r\n              \"aria-label\": \"change date\",\r\n            }}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            style={{ justifySelf: \"left\" }}\r\n            onClick={() => getData()}\r\n            disabled={!ticker}\r\n          >\r\n            Run\r\n          </Button>\r\n        </Grid>\r\n      </MuiPickersUtilsProvider>\r\n      {loading ? (\r\n        <CircularProgress style={{ alignContent: \"center\", height: \"40px\" }} />\r\n      ) : (\r\n        data && <StrategiesLayout data={data} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withMainContainer(StrategiesPage);\r\n","import * as React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Page404 from \"./components/error/Page404\";\r\nimport Home from \"./components/home/Home\";\r\nimport InidicatorPage from \"./components/ui/InidicatorPage\";\r\nimport StrategiesPage from \"./components/ui/StrategiesPage\";\r\n\r\nconst Routes = (): JSX.Element => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route exact path=\"/home\" component={Home} />\r\n      <Route exact path=\"/indicators\" component={InidicatorPage} />\r\n      <Route exact path=\"/strategies\" component={StrategiesPage} />\r\n      <Route component={Page404} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Router } from \"react-router\";\r\nimport Routes from \"./Routes\";\r\nimport { createBrowserHistory } from \"history\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{\"Team TBD\"}</title>\r\n      </Helmet>\r\n      <Router history={history}>\r\n        <Routes />\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}